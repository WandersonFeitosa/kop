name: Deploy to VM

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.VM_KNOWN_HOSTS }}
          if_key_exists: replace

      - name: Deploy to VM

        env:
          VM_HOST: ${{ secrets.VM_HOST }}
          VM_USER: ${{ secrets.VM_USER }}
          VM_DEPLOY_PATH: ${{ secrets.VM_DEPLOY_PATH }}
        run: |
          # Copy files to VM
          scp -r ./* $VM_USER@$VM_HOST:$VM_DEPLOY_PATH

          # Generate .env file
          ssh $VM_USER@$VM_HOST << EOF
            mkdir -p $VM_DEPLOY_PATH
            cd $VM_DEPLOY_PATH
            
            # Generate .env file
            cat << EOT > .env
              CLIENT_ID=${{ vars.CLIENT_ID }}
              CLIENT_SECRET=${{ vars.CLIENT_SECRET }}
              TOKEN=${{ vars.TOKEN }}
              MONGODB_URI=${{ vars.MONGODB_URI }}
              PIX_API_URL=${{ vars.PIX_API_URL }}
              PIX_TOKEN=${{ vars.PIX_TOKEN }}
              SERVER_MANAGER_URL=${{ vars.SERVER_MANAGER_URL }}
              SERVER_MANAGER_TOKEN=${{ vars.SERVER_MANAGER_TOKEN }}
              PORT=${{ vars.PORT }}
          EOF

      - name: Start Docker Compose

        env:
          VM_HOST: ${{ secrets.VM_HOST }}
          VM_USER: ${{ secrets.VM_USER }}
          VM_DEPLOY_PATH: ${{ secrets.VM_DEPLOY_PATH }}
        run: |
          ssh $VM_USER@$VM_HOST << EOF

            cd $VM_DEPLOY_PATH
            sudo docker compose up -d --build
          EOF
